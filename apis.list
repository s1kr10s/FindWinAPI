Accept|Accept is used to permit an incoming connection attempt on a socket.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-accept
AdjustTokenPrivileges|AdjustTokenPrivileges is used to enable or disable specific access privileges. Malware that performs process injection often calls this function to gain additional permissions.|Advapi32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-adjusttokenprivileges
AttachThreadInput|AttachThreadInput is used to attach the input processing from one thread to another so that the second thread receives input events such as keyboard and mouse events. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-attachthreadinput
Bind|Bind is used to associates a local address with a socket.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-bind
BitBlt|BitBlt is used to copy graphic data from one device to another. Spyware sometimes uses this function to capture screenshots.|Gdi32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt
BringWindowToTop|BringWindowToTop is used for bringing the specified window to the top of the Z order.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-bringwindowtotop
CallNextHookEx|CallNextHookEx is used within code that is hooking an event set by SetWindowsHookEx. CallNextHookEx calls the next hook in the chain. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-callnexthookex
CallWindowProcA|CallWindowProcA is used to pass message information to the specified window procedure.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-callwindowproca
CheckRemoteDebuggerPresent|CheckRemoteDebuggerPresent is used to check if a debugger is being used. This function is commonly used by malware for anti-debugging techniques.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/debugapi/nf-debugapi-checkremotedebuggerpresent
Closesocket|Closesocket is used to close an existing socket.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-closesocket
ConnectNamedPipe|ConnectNamedPipe is used to create a server pipe for interprocess communication that will wait for a client pipe to connect. This function can be used to simplify connectivity to a C2 server.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/namedpipeapi/nf-namedpipeapi-connectnamedpipe
Connect|Connect is used to establish a connection to a specified socket.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect
ControlServiceExA|ControlServiceExA is used to start, stop, modify, or send a signal to a running service. This function is commonly used by malware went it requires interaction with a service for malicious purposes.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-controlserviceexa
ControlService|ControlService is used to start, stop, modify, or send a signal to a running service. This function is commonly used by malware went it requires interaction with a service for malicious purposes.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-controlservice
CopyFile2|CopyFile2 is used to copy an existing file to a new file.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-copyfile2
CopyFileA|CopyFileA is used to copy an existing file to a new file.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-copyfilea
CopyFileExA|CopyFileExA is used to copy an existing file to a new file.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-copyfileexa
CountClipboardFormats|CountClipboardFormats is used to determine whether victim's clipboard was empty. A kind of Anti-debugging technique to determine if the system could be a sandbox.|User32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-countclipboardformats
CreateFile2|CreateFile2 is used to create a new file or opens an existing file.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2
CreateFileA|CreateFileA is used to create a new file or opens an existing file.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea
CreateFileMappingA|CreateFileMappingA creates a handle to a file mapping that loads a file into memory and makes it accessible via memory addresses. Launchers, loaders, and injectors use this function to read and modify PE files.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createfilemappinga
CreateMutexA|CreateMutexA is used to create a new mutex object. Mutexs are often used by malware to prevent the reinfection of a system with the same or different malware variant.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-createmutexa
CreateMutexExA|CreateMutexExA is used to create a new mutex object. Mutexs are often used by malware to prevent the reinfection of a system with the same or different malware variant.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-createmutexexa
CreatePipe|CreatePipe is used to create an anonymous pipe and returns handles to the read and write ends of the pipe. Could be used to add a sub-process for execution via cmd.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/namedpipeapi/nf-namedpipeapi-createpipe
CreateProcessAsUserA|CreateProcessAsUserA is used to create a new process and its primary thread.|Advapi32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessasusera
CreateProcessA|CreateProcessA is used to create a process. This function is used by malware in several process injection attacks such as process hollowing.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa
CreateProcessInternal|CreateProcessInternal is an undocumented API for process creation. According to Windows Internals, CreateProcess and CreateProcessAsUser actually lead to this API, which is responsible for starting the process creation in user land. Eventually it calls NtCreateUserProcess for the kernel land operations. This API is commonly used for spawning a suspended process to be hollowed/injected.|Kernel32.dll|Injection / Evasion|https://medium.com/@Achilles8284/the-birth-of-a-process-part-1-bfb4fdac070e
CreateProcessA|Creates a new process and its primary thread. The new process runs in the security context of the calling process.|Kernel32.dll|Injection|https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa
CreateProcessW|Creates a new process and its primary thread. The new process runs in the security context of the calling process.|Kernel32.dll|Injection|https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessw
CreateProcessWithTokenW|CreateProcessWithTokenW is used to create a new process and its primary thread.|Advapi32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createprocesswithtokenw
CreateRemoteThreadEx|CreateRemoteThreadEx is used to create a thread that runs in the virtual address space of another process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethreadex
CreateRemoteThread|CreateRemoteThread is used to create a thread that runs in the virtual address space of another process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethread
CreateServiceA|CreateServiceA is used to create a service object and adds it to the specified service control manager database. This function is commonly used by malware for persistence.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-createservicea
CreateThread|CreateThread is used to create a thread to execute within the virtual address space of the calling process. This function is commonly used for shellcode execution.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread
CreateTimerQueueTimer|CreateTimerQueueTimer is used to create a timer-queue timer. This function is commonly used by malware for time-based evasion.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/threadpoollegacyapiset/nf-threadpoollegacyapiset-createtimerqueuetimer
CreateToolhelp32Snapshot|CreateToolhelp32Snapshot is used to enumerate processes, threads, and modules. This function is commonly used by malware to enumerate processes before process injection.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot
CreateWaitableTimer|CreateWaitableTimer is used to create a delay timer. This function is used by malware for time-based evasion.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-createwaitabletimerw
CreateWindowExA|CreateWindowExA is used to create an overlapped, pop-up, or child window with an extended window style. This function is commonly used by malware to create invisible windows or for evasion purposes.|User32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createwindowexa
CryptAcquireContextA|CryptAcquireContextA is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP)|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptacquirecontexta
CryptBinaryToString|The CryptBinaryToString function is used to convert an array of bytes into a formatted string.|Crypt32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptbinarytostringa
CryptCreateHash|CryptCreateHash is used to create a hash.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptcreatehash
CryptDecrypt|CryptDecrypt is used to decrypt data.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptdecrypt
CryptDeriveKey|CryptDeriveKey is used to create encryption keys.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptderivekey
CryptDestroyHash|The CryptDestroyHash function destroys the hash object referenced by the hHash parameter. After a hash object has been destroyed, it can no longer be used.|Crypt32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptdestroyhash
CryptDestroyKey|CryptDestroyKey is used to destroy previously generated encryption keys.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptdestroykey
CryptEncrypt|CryptEncrypt is used to encrypt data.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptencrypt
CryptGenRandom|CryptGenRandom is used to fill a buffer with cryptographically random bytes.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptgenrandom
CryptGetHashParam|CryptGetHashParam|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptgethashparam
CryptHashData|CryptHashData is used to create a hash.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-crypthashdata
CryptProtectData|CryptProtectData can be leveraged to create a malicious artifact for encrypting the file system (Ransomware), effectively evading typical detection methods.More information is available: https://github.com/CarlosG13/Data-Protection-API-DPAPI-For-Impact---Ransomware|Crypt32.dll|Evasion / Ransomware|https://learn.microsoft.com/en-us/windows/win32/api/dpapi/nf-dpapi-cryptprotectdata
CryptReleaseContext|The CryptReleaseContext function is used to release the handle of a cryptographic service provider (CSP) and a key container.|Crypt32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptreleasecontext
CryptSetKeyParam|CryptSetKeyParam is used to customize various aspects of a session key's operations.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptsetkeyparam
CryptStringToBinary|The CryptStringToBinary function is used to convert a formatted string into an array of bytes.|Crypt32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptstringtobinarya
DecryptFileA|DecryptFileA is used to decrypt an encrypted file or directory.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-decryptfilea
DeleteFileA|DeleteFileA is used to delete an existing file. This function is used by malware to hide its tracks or tamper with an application.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-deletefilea
DeleteService|DeleteService is used to mark the specified service for deletion from the service control manager database.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-deleteservice
DeviceIoControl|DeviceIoControl is used to send a control message from user space to a device driver. DeviceIoControl is popular with kernel malware because it is an easy, flexible way to pass information between user space and kernel space.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/ioapiset/nf-ioapiset-deviceiocontrol
DnsQueryEx|DnsQueryEx is used to send a DNS query. This may be used for communications over a DNS tunnel.|Dnsapi.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/windns/nf-windns-dnsqueryex
DnsQuery_A|DnsQuery_A is used to send a DNS query. This may be used for communications over a DNS tunnel.|Dnsapi.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/windns/nf-windns-dnsquery_a
DrawTextExA|DrawTextExA is used to draw formatted text in the specified rectangle. This function has been used by ransomware for writing ransom notes.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-drawtextexa
DuplicateToken|The DuplicateToken function creates a new access token that duplicates one already in existence.|Advapi32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-duplicatetoken
EncryptFileA|EncryptFileA is used to encrypt a file or directory.|Advapi32.dll|Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-encryptfilea
EnumDesktopWindows|EnumDesktopWindows is used to enumerate all top-level windows associated with the specified desktop. This function is commonly used for enumeration purposes.|User32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumdesktopwindows
EnumDeviceDrivers|EnumDeviceDrivers is used to enumerate drivers in the machine. This function is commonly used with kernel malware or for enumeration purposes.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumdevicedrivers
EnumProcessModulesEx|EnumProcessModulesEx is used to enumerate the loaded modules (executables and DLLs) for a given process. Malware enumerates through modules when doing injection.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocessmodulesex
EnumProcessModules|EnumProcessModules is used to enumerate the loaded modules (executables and DLLs) for a given process. Malware enumerates through modules when doing injection.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocessmodules
EnumProcesses|EnumProcesses is used to enumerate processes in the machine. Process enumeration is often a precursor to process injection.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocesses
EnumResourceTypesA|EnumResourceTypesA is used to enumerate resource types within a binary module. Starting with Windows Vista, this is typically a language-neutral Portable Executable (LN file), and the enumeration also includes resources from one of the corresponding language-specific resource files (.mui files)â€”if one existsâ€”that contain localizable language resources. It is also possible to use hModule to specify a .mui file, in which case only that file is searched for resource types. Alternately, applications can call EnumResourceTypesEx, which provides more precise control over which resource files to enumerate.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-enumresourcetypesa
EnumResourceTypesExA|EnumResourceTypesExA is used to enumerate resource types associated with a specified binary module. The search can include both a language-neutral Portable Executable file (LN file) and its associated .mui files. Alternately, it can be limited to a single binary module of any type, or to the .mui files associated with a single LN file. The search can also be limited to a single associated .mui file that contains resources for a specific language.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-enumresourcetypesexw
EnumSystemLocalesA|EnumSystemLocalesA is used enumerate installed locale identifiers, all of the supported identifiers or alternate sort identifiers, according to which flag is passed to the API. Can be used to geofence infection campaigns or avoid infecting systems from a certain region/country. It can also be used to jump to allocated shellcode and execute it.|Kernel32.dll|Injection / Enumeration / Evasion / Ransomware|https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-enumsystemlocalesw
EnumWindows|EnumWindows is used to enumerate all top-level windows on the screen by passing the handle to each window, in turn, to an application-defined callback function. This function is commonly used for enumeration purposes.|User32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumwindows
ExitWindowsEx|ExitWindowsEx is used to log off an interactive user, shuts down the system, or shuts down and restarts the system. This function is commonly used by malware as an anti-debugging technique.|User32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-exitwindowsex
FindClose|FindClose is used to close a file search handle.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findclose
FindFirstFileA|FindFirstFileA is used to search through a directory and enumerate the filesystem.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirstfilea
FindFirstFileExA|FindFirstFileExA is used to search through a directory and enumerate the filesystem.|Kernel32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirstfileexa
FindFirstFileExW|FindFirstFileExW is used to search through a directory and enumerate the filesystem.|Kernel32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirstfileexw
FindFirstFileW|FindFirstFileW is used to search through a directory and enumerate the filesystem.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirstfilew
FindFirstUrlCacheEntryA|FindFirstUrlCacheEntryA is used to begin the enumeration of the Internet cache.|Wininet.dll|Enumeration / Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-findfirsturlcacheentrya
FindNextFileA|FindNextFileA is used to search through a directory and enumerate the filesystem.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findnextfilea
FindNextFileW|FindNextFileW is used to search through a directory and enumerate the filesystem.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findnextfilew
FindNextUrlCacheEntryA|FindNextUrlCacheEntryA is used to retrieve the next entry in the Internet cache.|Wininet.dll|Enumeration / Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-findnexturlcacheentrya
FindResourceA|FindResourceA is used to find a resource in an executable or loaded DLL. Malware sometimes uses resources to store strings, configuration information, or other malicious files. If you see this function used, check for a .rsrc section in the malware’s PE header.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-findresourcea
FindResourceExA|FindResourceExA is used to find a resource in an executable or loaded DLL. Malware sometimes uses resources to store strings, configuration information, or other malicious files. If you see this function used, check for a .rsrc section in the malware’s PE header.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-findresourceexa
FindWindowA|FindWindowA is used to get a handle to the top-level window whose class name and window name match the specified strings. This function is commonly used by malware as an anti-debugging technique.|User32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-findwindowa
FindWindowExA|FindWindowExA is used to get a handle to the top-level window whose class name and window name match the specified strings. This function is commonly used by malware as an anti-debugging technique.|User32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-findwindowexa
FlushEfsCache|FlushEfsCache is used to flush EFS data from memory. This is used by EFS ransomware post-encryption to cause the files and folder to become unreadable.|Advapi32.dll|Ransomware|https://www.geoffchappell.com/studies/windows/win32/advapi32/api/index.htm
FtpPutFileA|FtpPutFileA is used to upload a file to a server via FTP.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-ftpputfilea
GetAdaptersInfo|GetAdaptersInfo is used to obtain information about the network adapters on the system. This function is commonly used by malware for enumeration purposes.|Iphlpapi.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/iphlpapi/nf-iphlpapi-getadaptersinfo
GetAsyncKeyState|GetAsyncKeyState is used to determine when a specific key is pressed. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getasynckeystate
GetClipboardData|GetClipboardData is used to retrieve copied data residing in the clipboard.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboarddata
GetComputerNameA|GetComputerNameA is used to retrieve the computer name. This is commonly used by malware for anti-debugging purposes.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getcomputernamea
GetComputerNameW|GetComputerNameW is used to retrieve the computer name. This is commonly used by malware for anti-debugging purposes.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getcomputernamew
GetCurrentHwProfileA|GetCurrentHwProfileA is used to retrieve information about the current hardware profile for the local computer. This function is commonly used by malware to anti-debugging purposes.|Advapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getcurrenthwprofilea
GetCurrentProcessId|GetCurrentProcessId is used to retrieve the process identifier of the calling process.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocessid
GetCurrentProcess|GetCurrentProcess is used to retrieve a handle for the current process.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocess
GetCurrentThreadId|GetCurrentThreadId is used to retrieve the thread identifier of the calling thread.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthreadid
GetCurrentThread|GetCurrentThread is used to retrieve a handle for the calling thread.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentthread
GetDCEx|GetDCEx is used to retrieve a handle to a device context (DC) for the client area of a specified window or for the entire screen. This function is commonly used by spyware for taking screenshots.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdcex
GetDC|GetDC is used to retrieve a handle to a device context (DC) for the client area of a specified window or for the entire screen. This function is commonly used by spyware for taking screenshots.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdc
GetDesktopWindow|GetDesktopWindow is used to get a handle to the desktop window that covers the entire screen.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdesktopwindow
GetDriveTypeA|GetDriveTypeA is used to determine whether a disk drive is a removable / fixed / CD-ROM / RAM disk or network drive.|Kernel32.dll|Enumeration / Ransomware / Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getdrivetypea
GetFileAttributesA|GetFileAttributesA is used to retrieve file system attributes for a specified file or directory.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getfileattributesa
GetFileTime|GetFileTime is used to retrieve the date and time that a file or directory was created, last accessed, and last modified.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getfiletime
GetForegroundWindow|GetForegroundWindow is used to get a handle to the foreground window (the window with which the user is currently working). This function is commonly used by keyloggers and spyware to determine which window is being utilized at the moment by the user.|User32.dll|Spying / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getforegroundwindow
GetIpNetTable|The GetIpNetTable function retrieves the IPv4 to physical address mapping table. Could be used to identify hosts & mounted drives tracking ARP entries.|Iphlpapi.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/iphlpapi/nf-iphlpapi-getipnettable
GetKeyState|GetKeyState is used to retrieve the status of the specified virtual key. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getkeystate
GetKeyboardState|GetKeyboardState is used to copy the status of the 256 virtual keys to the specified buffer. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getkeyboardstate
GetKeynameTextA|The GetKeynameTextA function is used to retrieve a string that represents the name of a key.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getkeynametexta
GetLogicalDrives|GetLogicalDrives is used to retrieve a bitmask representing the currently available disk drives. This function can be used to emumerate all drives / mounted drives.|Kernel32.dll|Enumeration / Ransomware / Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getlogicaldrives
GetLogicalProcessorInformationEx|GetLogicalProcessorInformationEx is used to retrieve information about logical processors and related hardware. The function is used by malware for anti-debugging purposes.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getlogicalprocessorinformationex
GetLogicalProcessorInformation|GetLogicalProcessorInformation is used to retrieve information about logical processors and related hardware. The function is used by malware for anti-debugging purposes.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getlogicalprocessorinformation
GetMessageA|GetMessageA is used to retrieve a message from the calling thread's message queue. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getmessagea
GetModuleBaseNameA|GetModuleBaseNameA is used to retrieve the base name of a specified module.|Kernel32.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getmodulebasenamea
GetModuleFileNameA|GetModuleFileNameA is used to return the filename of a module that is loaded in the current process. Malware can use this function to modify or copy files in the currently running process.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamea
GetModuleFileNameExA|GetModuleFileNameExA is used to return the filename of a module that is loaded in the current process. Malware can use this function to modify or copy files in the currently running process.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getmodulefilenameexa
GetModuleFileNameW|GetModuleFileNameW is used to return the filename of a module that is loaded in the current process. Malware can use this function to modify or copy files in the currently running process.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamew
GetModuleHandleA|GetModuleHandleW is used to retrieve a module handle for the specified module. The module must have been loaded by the calling process. This function is often used along with GetProcAddress to dynamically retrieve the address of a function for evasion purposes.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulehandlea
GetNativeSystemInfo|GetNativeSystemInfo is used to retrieve information about the current system to an application running under WOW64. If the function is called from a 64-bit application, or on a 64-bit system that does not have an Intel64 or x64 processor (such as ARM64), it is equivalent to the GetSystemInfo function.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getnativesysteminfo
GetProcAddress|GetProcAddress is used to get the memory address of a function in a DLL. This is often used by malware for obfuscation and evasion purposes to avoid having to call the function directly.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getprocaddress
GetProcessHeaps|GetProcessHeaps is used to return the number of active heaps and retrieves handles to all of the active heaps for the calling process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-getprocessheaps
GetProcessHeap|GetProcessHeap is used to retrieve a handle to the default heap of the calling process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-getprocessheap
GetProcessIdOfThread|GetProcessIdOfThread is used to retrieve the process identifier of the process associated with the specified thread.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessidofthread
GetProcessId|GetProcessId is used to retrieve the process identifier of the specified process.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocessid
GetRawInputData|GetRawInputData is used to retrieve the raw input data from a specified device. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getrawinputdata
GetSystemDefaultLangId|GetSystemDefaultLangId is used to retrieve the language identifier for the system. This function is used by malware that wish to infect specific locales or simply wish to gather statistics on areas of infection.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-getsystemdefaultlangid
GetSystemDirectoryA|GetSystemDirectoryA retrieve the path of the system directory.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getsystemdirectorya
GetSystemTimeAsFileTime|Retrieves the current system date and time. The information is in Coordinated Universal Time (UTC) format. This function is commonly used by malware for anti-debugging.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getsystemtimeasfiletime
GetSystemTime|GetSystemTime is used to retrieve the current system date and time in Coordinated Universal Time (UTC) format. This function is commonly used by malware for anti-debugging.|Kernel32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getsystemtime
GetTempFileNameA|GetTempFileNameA is used to create a name for a temporary file. If a unique file name is generated, an empty file is created and the handle to it is released; otherwise, only a file name is generated.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettempfilenamea
GetTempPathA|GetTempPathA is used to retrieve the path of the directory designated for temporary files. This is often used by malware when it requires a location for additional installations.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha
GetThreadContext|GetThreadContext is used to retrieve a thread's context. This is often used as part of process injection techniques.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadcontext
GetThreadId|GetThreadId is used to retrieve the thread identifier of the specified thread.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadid
GetThreadInformation|GetThreadInformation is used to retrieve information about the specified thread.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadinformation
GetThreadLocale|GetThreadLocale is used to retrieve the locale identifier of the current thread. Can be used alongside other language and/or locale APIs to geofence infections|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-getthreadlocale
GetTickCount64|GetTickCount64 is used to retrieve the number of milliseconds that have elapsed since the system was started. This function is used by malware for anti-debugging purposes by checking how long the system uptime is.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount64
GetTickCount|GetTickCount is used to retrieve the number of milliseconds since bootup. This function is used by malware for anti-debugging purposes.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount
GetUserNameA|GetUserNameA is used to retrieve the username associated with the current thread. This function is used by malware for anti-debugging purposes.|Advapi32.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getusernamea
GetUserObjectInformationA|Retrieves information about the specified window station or desktop object.|User32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getuserobjectinformationa
GetUserObjectInformationW|Retrieves information about the specified window station or desktop object.|User32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getuserobjectinformationw
GetVersionExA|GetVersionExA is a classic method used to retrieve the Windows version.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getversionexa
GetVersionExW|GetVersionExW is a classic method used to retrieve the Windows version.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getversionexw
GetWindowDC|GetWindowDC is used to retrieve the device context (DC) for the entire window, including title bar, menus, and scroll bars. This function is commonly used by spyware and keyloggers to capture screenshots.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowdc
GetWindowsDirectoryA|GetWindowsDirectoryA is used to retreive the path to the Windows directory. This function may be used by malware retrieve the Windows path for additional installations.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getwindowsdirectorya
Gethostbyname|gethostbyname is used to retrieve host information corresponding to a host name from a host database.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-gethostbyname
Gethostname|gethostname is used to retrieve the standard host name for the local computer.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-gethostname
GlobalAlloc|GlobalAlloc is used to allocate the specified number of bytes from the heap.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-globalalloc
HeapAlloc|HeapAlloc is used to allocate a block of memory from a heap.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapalloc
HeapCreate|HeapCreate is used to allocate heap memory that can be used by the calling process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapcreate
HeapReAlloc|HeapReAlloc is used to reallocate a block of memory from a heap.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heaprealloc
HttpAddRequestHeaders|HttpAddRequestHeaders adds HTTP request headers to forge custom request handle|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-httpaddrequestheadersa
HttpOpenRequestA|HttpOpenRequestA is used to create a HTTP request.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-httpopenrequesta
HttpSendRequestA|HttpSendRequestA is used to send a HTTP request to a server.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-httpsendrequesta
HttpSendRequestExA|HttpSendRequestExA is used to send a HTTP request to a server|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-httpsendrequestexa
IcmpSendEcho|IcmpSendEcho is used to send an IPv4 ICMP echo request and returns any echo response replies. The call returns when the time-out has expired or the reply buffer is filled. This function is used by malware for time-evasion purposes by specifying a large timeout value.|Iphlpapi.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/icmpapi/nf-icmpapi-icmpsendecho
ImpersonateLoggedOnUser|The ImpersonateLoggedOnUser function lets the calling thread impersonate the security context of a logged-on user. The user is represented by a token handle.|Advapi32.dll|Evasion / Helper|https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-impersonateloggedonuser
Inet_addr|inet_addr is used to convert a string containing an IPv4 dotted-decimal address into a proper address for the IN_ADDR structure.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-inet_addr
InternetCloseHandle|InternetCloseHandle is used to close an internet handle.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetclosehandle
InternetConnectA|InternetConnectA is used to open a File Transfer Protocol (FTP) or HTTP session for a given site.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetconnecta
InternetOpenA|InternetOpenA is used to initialize the use of WinINet functions.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetopenurla
InternetOpenUrlA|InternetOpenUrlA is used to open a resource specified by a complete FTP or HTTP URL.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetopenurla
InternetReadFileExA|InternetReadFileExA is used to read data from a handle opened by the InternetOpenUrl or HttpOpenRequest function.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetreadfileexa
InternetReadFile|InternetReadFile is used to read data from a handle opened by the InternetOpenUrl, FtpOpenFile, or HttpOpenRequest function.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetreadfile
InternetSetOptionA|InternetSetOptionA is used to set an Internet option.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetsetoptiona
InternetWriteFile|InternetWriteFile is used to write data to an open Internet file.|Wininet.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetreadfile
IsDebuggerPresent|IsDebuggerPresent is used to determine whether the calling process is being debugged by a user-mode debugger.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/debugapi/nf-debugapi-isdebuggerpresent
IsWoW64Process|IsWow64Process is used by a 32-bit process to determine if it is running on a 64-bit operating system.|Kernel32.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/wow64apiset/nf-wow64apiset-iswow64process
KeInsertQueueApc|KeInsertQueueApc is responsible for attaching an initialized APC to the APC queue of its target thread|Kernel32.dll|Injection|https://www.codewarrior.cn/ntdoc/winnt/ke/KeInsertQueueApc.htm
LdrLoadDll|LdrLoadDll is used instead of LoadLibrary to load modules.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FExecutable%20Images%2FLdrLoadDll.html
Listen|Listen is used to place a socket in a state in which it is listening for an incoming connection.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-listen
LoadLibraryA|LoadLibraryA is used to load a specified module into the address space of the calling process. Malware commonly use this to load DLLs dynamically for evasion purposes.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibrarya
LoadLibraryExA|LoadLibraryExA is used to load a specified module into the address space of the calling process. Malware commonly use this to load DLLs dynamically for evasion purposes.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryexa
LoadLibraryExW|LoadLibraryExW is used to load a specified module into the address space of the calling process. Malware commonly use this to load DLLs dynamically for evasion purposes.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryexw
LoadLibraryW|LoadLibraryW is used to load a specified module into the address space of the calling process. Malware commonly use this to load DLLs dynamically for evasion purposes.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryw
LoadResource|LoadResource is used to load a resource from a PE file into memory. Malware sometimes uses resources to store strings, configuration information, or other malicious files.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadresource
LocalAlloc|LocalAlloc is used for heap allocation and manipulation.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-localalloc
LockResource|LockResource is used with FindResource(), LoadResource() and SizeOfResource() usually to work with embedded executables into the .rsrc section (droppers)|Kernel32.dll|Evasion / Helper|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-lockresource
LookupAccountNameA|LookupAccountNameA is used to accept the name of a system and an account as input. It retrieves a security identifier (SID) for the account and the name of the domain on which the account was found.|Advapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupaccountnamea
LookupPrivilegeValueA|LookupPrivilegeValueA is used to retrieve the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name. This function is commonly used by malware in process injection or token stealing.|Advapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupprivilegevaluea
MapViewOfFile2|MapViewOfFile2 is used for heap allocation and manipulation.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffile2
MapViewOfFile3|MapViewOfFile3 is used for heap allocation and manipulation.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffile3
MapViewOfFileEx|MapViewOfFileEx is used for heap allocation and manipulation.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffileex
MapViewOfFile|MapViewOfFile is used for heap allocation and manipulation.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffile
MapVirtualKeyA|MapVirtualKeyA is used to map a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code. This function is commonly used by spyware and keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapvirtualkeya
MapVirtualKeyExA|MapVirtualKeyExA is used to map a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code. This function is commonly used by spyware and keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapvirtualkeyexa
Module32First|Module32First is used as part of CreateToolHelp32Snapshot for enumeration purposes.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-module32first
Module32Next|Module32Next is used as part of CreateToolHelp32Snapshot for enumeration purposes.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-module32next
MoveFileA|MoveFileA is used to move an existing file or a directory, including its children.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-movefilea
MoveFileExA|MoveFileExA is used to move an existing file or a directory, including its children.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-movefileexa
NetShareAdd|NetShareAdd is used to share a server resource.|Netapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/lmshare/nf-lmshare-netshareadd
NetShareCheck|NetShareCheck is used to check whether or not a server is sharing a device.|Netapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/lmshare/nf-lmshare-netsharecheck
NetShareEnum|NetShareEnum is used to retrieve information about each shared resource on a server.|Netapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/lmshare/nf-lmshare-netshareenum
NetShareGetInfo|NetShareGetInfo is used to retrieves information about a particular shared resource on a server.|Netapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/lmshare/nf-lmshare-netsharegetinfo
NetShareSetInfo|NetShareSetInfo is used to set the parameters of a shared resource.|Netapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/lmshare/nf-lmshare-netsharesetinfo
NtAdjustPrivilegesToken|NtAdjustPrivilegesToken is used to modify state of avaiable token's privileges. This function is often used by malware that performs process injection often calls this function to gain additional permissions.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FToken%2FNtAdjustPrivilegesToken.html
NtAllocateVirtualMemory|NtAllocateVirtualMemoy is used to reserve, commit, or both, a region of pages within the user-mode virtual address space of a specified process.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FMemory%20Management%2FVirtual%20Memory%2FNtWriteVirtualMemory.html
NtClose|NtClose is used to close an open handle.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntclose
NtContinue|NtContinue is used to resume the execution of a thread.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FThread%2FNtContinue.html
NtCreateFile|NtCreateFile is used to create a new file or directory, or opens an existing file, device, directory, or volume.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile
NtCreateProcessEx|NtCreateProcessEx is used to create a new process.|Ntdll.dll|Injection|https://titanwolf.org/Network/Articles/Article?AID=47158f72-b6f0-4b0e-b9d6-a51af615aac6#gsc.tab=0
NtCreateProcess|NtCreateProcess is used to create a new process.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FProcess%2FNtCreateProcess.html
NtCreateSection|NtCreateSection is used to create a new section object.|Ntdll.dll|Injection|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatesection
NtCreateThreadEx|NtCreateThreadEx is used to create a new thread.|Ntdll.dll|Injection|https://securityxploded.com/ntcreatethreadex.php
NtCreateThread|NtCreateThread is used to create a new thread.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FThread%2FNtCreateThread.html
NtCreateUserProcess|NtCreateUserProcess is used to create a new process.|Ntdll.dll|Injection|https://github.com/Microwave89/createuserprocess/blob/master/createuserprocess/main.c
NtDelayExecution|NtDelayExecution is used to suspend execution, similiar to the Sleep() API function. This function can be used by malware for evasion purposes.|Ntdll.dll|Evasion|https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FThread%2FNtDelayExecution.html
NtDeleteKey|NtDeleteKey is used to delete a registry key.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwdeletekey
NtDeleteValueKey|NtDeleteValueKey is used to delete a registry key value.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwdeletevaluekey
NtDuplicateObject|NtDuplicateObject is used to create a handle that is a duplicate of the specified source handle. Malware can use this function to obtain the necessary access rights to a process via duplicating its handle, and subsequently kill a process or inject into it.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FType%20independed%2FNtDuplicateObject.html
NtMakeTemporaryObject|NtMakeTemporaryObject is used to change the attributes of an object to make it temporary.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwmaketemporaryobject
NtMapViewOfSection|NtMapViewOfSection is used to map a view of a section into the virtual address space of a subject process. This function is used by malware as part of process injection.|Ntdll.dll|Injection|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwmapviewofsection
NtOpenProcess|NtOpenProcess is used to get a handle on a process. This function is commonly used as part of process injection.|Ntdll.dll|Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FProcess%2FNtOpenProcess.html
NtOpenThread|NtOpenThread is used to get a handle on a thread. This function is commonly used as part of process injection.|Ntdll.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/devnotes/ntopenthread
NtProtectVirtualMemory|NtProtectVirtualMemory is used to interact with and modify memory regions.|Ntdll.dll|Injection|http://www.codewarrior.cn/ntdoc/winnt/mm/NtProtectVirtualMemory.htm
NtQueryDirectoryFile|NtQueryDirectoryFile is used to retrieve information about a directory. This function can be used for enumeration purposes.|Ntdll.dll|Enumeration|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntquerydirectoryfile
NtQueryInformationProcess|NtQueryInformationProcess is used to retrieve information about a specified process.|Ntdll.dll|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntqueryinformationprocess
NtQuerySystemEnvironmentValueEx|NtQuerySystemEnvironmentValueEx is used to locate a specified system environment variable and return its value.|Ntdll.dll|Enumeration|http://www.codewarrior.cn/ntdoc/winxp/ex/NtQuerySystemEnvironmentValueEx.htm
NtQueryTimer|NtQueryTimer is used to query a timer's attributes.|Ntdll.dll|Helper|https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FTimer%2FNtQueryTimer.html
NtQueueApcThreadEx2|NtQueueApcThreadEx2 is a new system call that allows to pass both UserApcFlags and MemoryReserveHandle.|Ntdll.dll|Injection|https://repnz.github.io/posts/apc/user-apc/#ntqueueapcthreadex2-some-new-friends-in-the-fast-ring
NtQueueApcThreadEx|NtQueueApcThreadEx is used to execute code for a different thread. This function is commonly used as part of process injection.|Ntdll.dll|Injection|https://repnz.github.io/posts/apc/user-apc/#ntqueueapcthreadex2-some-new-friends-in-the-fast-ring
NtQueueApcThread|NtQueueApcThread is used to execute code for a different thread. This function is commonly used as part of process injection.|Ntdll.dll|Injection|https://repnz.github.io/posts/apc/user-apc/#ntqueueapcthreadex2-some-new-friends-in-the-fast-ring
NtReadVirtualMemoryEx|NtReadVirtualMemoryEx is used to copy data in the specified address range from the address space of the specified process into the specified buffer of the current process|Ntdll.dll|Injection|
NtReadVirtualMemory|NtReadVirtualMemory is used to copy data in the specified address range from the address space of the specified process into the specified buffer of the current process|Ntdll.dll|Injection|http://www.codewarrior.cn/ntdoc/winnt/mm/NtReadVirtualMemory.htm
NtResumeProcess|NtResumeProcess is used to resume a suspended process|ntdll.dll|Injection / Helper|https://www.pinvoke.net/default.aspx/ntdll/NtResumeProcess.html
NtResumeThread|NtResumeThread is used to resume a suspended thread.|Ntdll.dll|Injection|https://ntopcode.wordpress.com/tag/ntresumethread/
NtSetContextThread|NtSetContextThread is used to set the usermode context of the specified thread.|Ntdll.dll|Helper|http://www.codewarrior.cn/ntdoc/wrk/ps/NtSetContextThread.htm
NtSetInformationProcess|NtSetInformationProcess is used to modify information about a process such making it a critical process.|Ntdll.dll|Helper|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FProcess%2FNtSetInformationProcess.html
NtSetInformationThread|NtSetInformationThread is used to set the priority of a thread.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntsetinformationthread
NtSetSystemEnvironmentValueEx|NtSetSystemEnvironmentValueEx is used to set a system environment variable.|Ntdll.dll|Helper|http://www.codewarrior.cn/ntdoc/winxp/ex/NtSetSystemEnvironmentValueEx.htm
NtSetValueKey|NtSetValueKey is used to create or replace a registry value.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsetvaluekey
NtShutdownSystem|NtShutdownSystem is used to shutdown the system.|Ntdll.dll|Helper|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FHardware%2FNtShutdownSystem.html
NtSuspendProcess|NtSuspendProcess is used to suspend the target process|ntdll.dll|Injection|https://www.pinvoke.net/default.aspx/ntdll.NtSuspendProcess
NtTerminateProcess|NtTerminateProcess is used to terminate a process and all its threads.|Ntdll.dll|Helper|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/nf-ntddk-zwterminateprocess
NtTerminateThread|NtTerminateThread is used to terminate a thread.|Ntdll.dll|Helper|http://www.codewarrior.cn/ntdoc/winnt/ps/NtTerminateThread.htm
NtUnmapViewOfSection|NtUnmapViewOfSection is used to unmap a view of a section from the virtual address space of a subject process.|Ntdll.dll|Injection|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwunmapviewofsection
NtWaitForMultipleObjects|NtWaitForMultipleObjects is used to wait until one or all of the specified objects are in the signaled state or the time-out interval elapses. This function is commonly used by malware for evasion purposes|Ntdll.dll|Evasion / Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FType%20independed%2FNtWaitForMultipleObjects.html
NtWaitForSingleObject|NtWaitForSingleObject is used to wait until the specified object is in the signaled state or the time-out interval elapses. This function is commonly used by malware for evasion purposes.|Ntdll.dll|Evasion / Injection|http://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FType%20independed%2FNtWaitForSingleObject.html
NtWriteVirtualMemory|NtWriteVirtualMemory is used to copy the specified address range from the current process into the specified address range of the specified process.|Ntdll.dll|Injection|http://www.codewarrior.cn/ntdoc/winnt/mm/NtWriteVirtualMemory.htm
OpenClipboard|OpenClipboard is used to get a handle on the clipboard.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-openclipboard
OpenFileMappingA|OpenFileMappingA is used to open a named file mapping object.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-openfilemappinga
OpenProcessToken|OpenProcessToken is used to open the access token associated with a process.|Advapi32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocesstoken
OpenProcess|OpenProcess is used to get a handle on a process. This function is commonly used by malware during process injection.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocess
OpenSCManagerA|OpenSCManagerA is used to open a handle to the service control manager. This function is commonly used when a malware intends to interact with a service.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-openscmanagera
OpenServiceA|OpenServiceA is used to open an existing service.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-openservicea
OpenThread|OpenThread is used to get a handle on a specified thread. It is commonly seen in process injection techniques.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openthread
OutputDebugStringA|OutputDebugStringA sends a string to the debugger for display. This function can be used as an anti-debugging technique.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/debugapi/nf-debugapi-outputdebugstringa
PathFileExistsA|PathFileExistsA is used to determine whether a path to a file system object such as a file or folder is valid. This function is used by malware to enumerate files and installed programs (e.g. AV solutions).|Shlwapi.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfileexistsa
PathFindFileNameA|Searches a path for a file name.|Shlwapi.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindfilenamea
PathFindFileNameW|Searches a path for a file name.|Shlwapi.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindfilenamew
PeekMessageA|PeekMessageA is used to check for incoming sent messages, checks the thread message queue for a posted message, and retrieves the message (if any exist).|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-peekmessagea
PeekNamedPipe|Used to copy data from a named pipe without removing data from the pipe. This function has been used by exploits targeting SMB vulnerabilities.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/namedpipeapi/nf-namedpipeapi-peeknamedpipe
PostMessageA|PostMessageA is used to post a message in the message queue associated with the thread that created the specified window and returns without waiting for the thread to process the message.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-postmessagea
PostThreadMessageA|PostThreadMessageA is used to post a message to the message queue of the specified thread.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-postthreadmessagea
Process32First|Process32First is used as part of CreateToolhelp32Snapshot for enumeration purposes.|Kernel32.dll|Enumeration / Injection|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-process32first
Process32Next|Process32Next is used as part of CreateToolhelp32Snapshot for enumeration purposes.|Kernel32.dll|Enumeration / Injection|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-process32next
QueryPerformanceCounter|QueryPerformanceCounter is used to retrieve the frequency of the performance counter. This function is commonly used by malware for anti-debugging purposes. The malware will measure the time before and after an operation, if the time exceeds taken expected time, the malware will terminate or activate a benign function.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/profileapi/nf-profileapi-queryperformancecounter
QueryPerformanceFrequency|QueryPerformanceFrequency is used to retrieve the frequency of the performance counter. This function is commonly used by malware for anti-debugging purposes. The malware will measure the time before and after an operation, if the time exceeds taken expected time, the malware will terminate or activate a benign function.|Kernel32.dll|Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/profileapi/nf-profileapi-queryperformancefrequency
QueueUserAPC|QueueUserAPC is used to execute code for a different thread. This function is commonly used as part of process injection.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-queueuserapc
ReadFile|ReadFile is used to read data from the specified file or input/output (I/O) device.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-readfile
ReadProcessMemory|ReadProcessMemory can be used to read the memory of a remote process.|Kernel32.dll|Enumeration / Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-readprocessmemory
Recv|Recv is used to receive data from a connected socket or a bound connectionless socket.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-recv
RegCloseKey|RegCloseKey is used to close a handle to the specified registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regclosekey
RegConnectRegistryA|RegConnectRegistryA is used to establish a connection to a predefined registry key on another computer.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regconnectregistrya
RegCopyTreeA|RegCopyTreeA is used to copy the specified registry key, along with its values and subkeys, to the specified destination key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regcopytreea
RegCreateKeyA|RegCreateKeyA is used to create a specified registry key. If the key already exists, the function opens it.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regcreatekeya
RegCreateKeyExA|RegCreateKeyExA is used to create a specified registry key. If the key already exists, the function opens it.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regcreatekeyexa
RegCreateKeyTransactedA|RegCreateKeyTransactedA is used to create the specified registry key and associates it with a transaction. If the key already exists, the function opens it.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regcreatekeytransacteda
RegDeleteKeyA|RegDeleteKeyA is used to delete a subkey and its values from the specified platform-specific view of the registry.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdeletekeya
RegDeleteKeyExA|RegDeleteKeyExA is used to delete a subkey and its values from the specified platform-specific view of the registry.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdeletekeyexa
RegDeleteKeyTransactedA|RegDeleteKeyTransactedA is used to delete a subkey and its values from the specified platform-specific view of the registry as a transacted operation.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdeletekeytransacteda
RegDeleteKeyValueA|RegDeleteKeyValueA is used to remove the specified value from the specified registry key and subkey.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdeletekeyvaluea
RegDeleteTreeA|RegDeleteTreeA is used to delete the subkeys and values of the specified key recursively.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdeletetreea
RegDeleteValueA|RegDeleteValueA is used to remove a named value from the specified registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdeletevaluea
RegEnumKeyA|RegEnumKeyA is used to enumerate the subkeys of the specified open registry key. The function retrieves the name of one subkey each time it is called.|Advapi32.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regenumkeya
RegEnumKeyExA|RegEnumKeyExA is used to enumerate the subkeys of the specified open registry key.|Advapi32.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regenumkeyexa
RegEnumKeyExW|RegEnumKeyExW is used to enumerate the subkeys of the specified open registry key.|Advapi32.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regenumkeyexw
RegEnumValueA|RegEnumValueA is used to enumerate the values for the specified open registry key|Advapi32.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regenumvaluea
RegFlushKey|RegFlushKey is used to write all the attributes of the specified open registry key into the registry.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regflushkey
RegGetKeySecurity|RegGetKeySecurity is used to retrieve a copy of the security descriptor protecting the specified open registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-reggetkeysecurity
RegGetValueA|RegGetValueA is used to retrieve the type and data for the specified registry value.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-reggetvaluea
RegLoadKeyA|RegLoadKeyA is used to create a subkey under HKEY_USERS or HKEY_LOCAL_MACHINE and loads the data from the specified registry hive into that subkey.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regloadkeya
RegLoadMUIStringA|RegLoadMUIStringA is used to load the specified string from the specified key and subkey.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regloadmuistringa
RegOpenCurrentUser|RegOpenCurrentUser is used to retrieve a handle to the HKEY_CURRENT_USER key for the user the current thread is impersonating.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopencurrentuser
RegOpenKeyA|RegOpenKeyA is used to open a specified registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenkeya
RegOpenKeyExA|RegOpenKeyExA is used to open a specified registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenkeyexa
RegOpenKeyTransactedA|RegOpenKeyTransactedA is used to open the specified registry key and associates it with a transaction|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenkeytransacteda
RegOpenUserClassesRoot|RegOpenUserClassesRoot is used to retrieve a handle to the HKEY_CLASSES_ROOT key for a specified user.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenuserclassesroot
RegOverridePredefKey|RegOverridePredefKey is used to map a predefined registry key to the specified registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regoverridepredefkey
RegQueryInfoKeyA|RegQueryInfoKeyA is used to retrieves information about the specified registry key.|Advapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regqueryinfokeya
RegQueryMultipleValuesA|RegQueryMultipleValuesA is used to retrieve the type and data for a list of value names associated with an open registry key.|Advapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regquerymultiplevaluesa
RegQueryValueExA|RegQueryValueExA is used to retrieve the type and data for the specified value name associated with an open registry key.|Advapi32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regqueryvalueexa
RegReplaceKeyA|RegReplaceKeyA is used to replace the file backing a registry key and all its subkeys with another file, so that when the system is next started, the key and subkeys will have the values stored in the new file.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regreplacekeya
RegRestoreKeyA|RegRestoreKeyA is used to read the registry information in a specified file and copies it over the specified key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regrestorekeya
RegSaveKeyA|RegSaveKeyA is used to save the specified key and all of its subkeys and values to a registry file, in the specified format.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsavekeya
RegSaveKeyExA|RegSaveKeyExA is used to save the specified key and all of its subkeys and values to a registry file, in the specified format.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsavekeyexa
RegSetKeySecurity|RegSetKeySecurity is used to set the security of an open registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetkeysecurity
RegSetKeyValueA|RegSetKeyValueA is used to set a value for a given registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetkeyvaluea
RegSetValueExA|RegSetValueExA is used to set a value and type for a given registry key.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetvalueexa
RegUnLoadKeyA|RegUnLoadKeyA is used to unload the specified registry key and its subkeys from the registry.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regunloadkeya
RegisterHotKey|RegisterHotKey is used to create a system wide hotkey. This function is commonly used by spyware or keyloggers to recieve a notification when a certain combination of keys are pressed.|User32.dll|Evasion / Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerhotkey
RegisterRawInputDevices|RegisterRawInputDevices is used to register the devices that supply raw input.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerrawinputdevices
ResumeThread|ResumeThread is used to resume a specified thread often times as part of process injection.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-resumethread
RtlCopyMemory|RtlCopyMemory is used to copy the contents of a source memory block to a destination memory block.|Ntdll.dll|Injection|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcopymemory
RtlCreateHeap|RtlCreateHeap is used to create a heap object that can be used by the calling process.|Ntdll.dll|Injection|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-rtlcreateheap
RtlGetVersion|RtlGetVersion is used to enumerate OS basic information properties such Windows and build versions.|NtosKrnl.lib|Enumeration / Anti-Debugging|https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlgetversion
RtlMoveMemory|RtlMoveMemory is used to copy the contents of a source memory block to a destination memory block, and supports overlapping source and destination memory blocks.|Ntdll.dll|Injection|
RtlSetProcessIsCritical|RtlSetProcessIsCritical is used to set a process to a system critical status. This function is used by malware to prevent the process from being terminated.|Ntdll.dll|Helper|https://www.codeproject.com/Articles/43405/Protecting-Your-Process-with-RtlSetProcessIsCriti
SHGetFileInfoA|Retrieves information about an object in the file system, such as a file, folder, directory, or drive root.|Shell32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shgetfileinfoa
SHGetFileInfoW|Retrieves information about an object in the file system, such as a file, folder, directory, or drive root.|Shell32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shgetfileinfow
SearchPathA|SearchPathA is used to search for a specified file in a specified path.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/processenv/nf-processenv-searchpatha
Select|Select is used to determine the status of one or more sockets, waiting if necessary, to perform synchronous I/O. This function is used by malware for time-based evasion by setting a large timeout number.|Ws2_32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-select
SendMessageA|SendMessageA is used to send the specified message to a window or windows.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-sendmessagea
SendMessageCallbackA|SendMessageCallbackA is used to send the specified message to a window or windows.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-sendmessagecallbacka
SendMessageTimeoutA|SendMessageTimeoutA is used to send the specified message to a window or windows.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-sendmessagetimeouta
SendNotifyMessageA|SendNotifyMessageA is used to send the specified message to a window or windows.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-sendnotifymessagea
Send|Send is used to send data on a connected socket.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-send
SetClipboardData|SetClipboardData is used to place data on the clipboard in a specified clipboard format.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setclipboarddata
SetCurrentDirectory|SetCurrentDirectory is used to change the current directory for the current process.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-setcurrentdirectory
SetEnvironmentVariableA|SetEnvironmentVariableA sets the contents of the specified environment variable for the current process.  Setting custom envrinoment variables can be used for obfuscation and evasion purposes.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/processenv/nf-processenv-setenvironmentvariablea
SetFileAttributesA|SetFileAttributesA is used to set attributes of a file or directory. This function is commonly used by malware to make a file or directory hidden.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-setfileattributesa
SetFileTime|SetFileTime sets the date and time that the specified file or directory was created, last accessed, or last modified. This function is often used by malware to conceal malicious activity.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-setfiletime
SetFocus|SetFocus is used to set the keyboard focus to the specified window|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setfocus
SetForegroundWindow|SetForegroundWindow is used for bring the thread that created the specified window into the foreground and activates the window|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setforegroundwindow
SetProcessDEPPolicy|SetProcessDEPPolicy is used to override the default DEP policy. Malware will use this function to allow data execution.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-setprocessdeppolicy
SetPropA|SetPropA is used to add a new entry or changes an existing entry in the property list of the specified window. This function is commonly used by malware to register a property and wait for its invocation to execute malicious commands.|User32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setpropa
SetThreadContext|SetThreadContext is used to modify a thread's context. This is often used as part of process injection techniques.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadcontext
SetThreadPriority|SetThreadPriority is used to set the priority value for the specified thread. This value, together with the priority class of the thread's process, determines the thread's base priority level.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadpriority
SetThreadToken|The SetThreadToken function assigns an impersonation token to a thread. The function can also cause a thread to stop using an impersonation token.|Advapi32.dll|Evasion / Helper|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadtoken
SetTimer|SetTimer is used to create a timer with the specified time-out value. This function is commonly used by malware for time-based evasion|User32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-settimer
SetWaitableTimer|SetWaitableTimer is used to activate the specified waitable timer. This function is commonly used by malware for time-based evasion.|Kernel32.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-setwaitabletimer
SetWinEventHook|SetWinEventHook is used to set an event hook function for a range of events.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwineventhook
SetWindowLongA|SetWindowLongA is used to changes an attribute of a specified window.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowlonga
SetWindowLongPtrA|SetWindowLongPtrA is used to changes an attribute of a specified window.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowlongptra
SetWindowsHookExA|SetWindowsHookExA is used to install an application-defined hook procedure into a hook chain. This function is commonly used by keyloggers.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowshookexa
ShellExecuteA|ShellExecuteA is used to perform an operation on a specified file.|Shell32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecutea
ShellExecuteExA|ShellExecuteExA is used to perform an operation on a specified file.|Shell32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecuteexa
ShellExecuteExW|ShellExecuteExW is used to perform an operation on a specified file.|Shell32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecuteexw
ShellExecuteW|ShellExecuteW is used to perform an operation on a specified file.|Shell32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecutew
ShowWindow|ShowWindow is used to set the specified window's show state.|User32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-showwindow
SizeOfResource|SizeOfResource checks and retrieves the size of given resource. Usually found in droppers|Kernel32.dll|Evasion / Helper|https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-sizeofresource
SleepEx|SleepEx is used to suspend the execution of the current thread for a set time. This function is commonly used for time-based evasion by adding delays in the code.|Kernel32.dll|Evasion / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-sleepex
Sleep|Sleep is used to suspend the execution of the current thread for a set time. This function is commonly used for time-based evasion by adding delays in the code.|Kernel32.dll|Evasion / Anti-Debugging|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-sleep
Socket|socket is used create a socket that is bound to a specific transport service provider.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-socket
StartServiceA|StartServiceA is used to start a service.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-startservicea
StartServiceCtrlDispatcherA|StartServiceCtrlDispatcherA is used by a service to connect the main thread of the process to the service control manager.|Advapi32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-startservicectrldispatchera
StretchBlt|StretchBlt is used to copy graphic data from one device to another. Spyware sometimes uses this function to capture screenshots.|Gdi32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-stretchblt
SuspendThread|SuspendThread is used to suspend a specified thread often times as part of process injection or to tamper with a legitimate application.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-suspendthread
TerminateProcess|TerminateProcess is used to terminate a process.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminateprocess
TerminateThread|TerminateThread is used to terminate a thread.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminatethread
Thread32First|Thread32First is used as part of CreateToolhelp32Snapshot for enumeration purposes.|Kernel32.dll|Enumeration / Injection|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-thread32first
Thread32Next|Thread32Next is used as part of CreateToolhelp32Snapshot for enumeration purposes.|Kernel32.dll|Enumeration / Injection|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-thread32next
TimeGetTime|TimeGetTime is used to retrieve the system time, in milliseconds. The system time is the time elapsed since Windows was started.|Winmm.dll|Evasion|https://docs.microsoft.com/en-us/windows/win32/api/timeapi/nf-timeapi-timegettime
Toolhelp32ReadProcessMemory|Toolhelp32ReadProcessMemory can be used to read the memory of other processes.|Kernel32.dll|Enumeration / Injection|https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-toolhelp32readprocessmemory
URLDownloadToCacheFile|URLDownloadToCacheFile is used to download data to the Internet cache and returns the file name of the cache location for retrieving the bits.|Urlmon.dll|Internet|https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775122(v=vs.85)
URLDownloadToFile|URLDownloadToFile is used to download bits from the Internet and saves them to a file.|Urlmon.dll|Internet|https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775123(v=vs.85)
URLOpenBlockingStream|URLOpenBlockingStream is used to create a blocking type stream object from a URL and downloads the data from the Internet.|Urlmon.dll|Internet|https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775127(v=vs.85)
URLOpenStream|URLOpenStream is used to create a push type stream object from a URL.|Urlmon.dll|Internet|https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775129(v=vs.85)
UnhookWindowsHookEx|UnhookWindowsHookEx is used to remove a hook procedure installed in a hook chain by the SetWindowsHookEx function.|User32.dll|Spying|https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-unhookwindowshookex
UnmapViewOfFile|UnmapViewOfFile is used to unmap a mapped view of a file from the calling process's address space.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-unmapviewoffile
UuidFromStringA|UuidFromStringA is used to convert a string to a UUID. This function can be abused to both decode data and write it to memory without using common functions such as memcpy or WriteProcessMemory.|Rpcrt4.dll|Evasion / Injection / Helper|https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-uuidfromstringa
VirtualAlloc2FromApp|VirtualAlloc2FromApp is used to reserve or changes the state of a region of pages in the virtual address space of the calling process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc2fromapp
VirtualAlloc2|VirtualAlloc2 is used to reserve or changes the state of a region of pages in the virtual address space of a specified process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc2
VirtualAllocExNuma|VirtualAllocExNuma is used to reserve or changes the state of a region of pages in the virtual address space of a specified process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualallocexnuma
VirtualAllocEx|VirtualAllocEx is often used by malware to allocate memory in a remote process as part of process injection.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualallocex
VirtualAllocFromApp|VirtualAllocFromApp is used to reserve or changes the state of a region of pages in the virtual address space of the calling process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualallocfromapp
VirtualAlloc|VirtualAlloc is often used by malware to allocate memory as part of process injection.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc
VirtualProtectEx|VirtualProtectEx is often used by malware to modify memory protection in a remote process (often to allow write or execution).|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualprotectex
VirtualProtectFromApp|VirtualProtectFromApp is used to change the protection on a region of committed pages in the virtual address space of the calling process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualprotectfromapp
VirtualQuery|VirtualQuery is used to retrieve information about a range of pages within the virtual address space of a specified process. This function is commonly used by malware to enumerate an external process.|Kernel32.dll|Enumeration|https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualquery
VirtualProtect|VirtualProtect is often used by malware to modify memory protection (often to allow write or execution).|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualprotect
VirtualQueryEx|VirtualQueryEx is used to retrieve information about a range of pages within the virtual address space of a specified process. This function is commonly used by malware to enumerate an external process.|Kernel32.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getcomputernamew
WNetAddConnection2A|The WNetAddConnection2A function makes a connection to a network resource and can redirect a local device to the network resource. The WNetAddConnection2 function supersedes the WNetAddConnection function.|Mpr.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetaddconnection2a
WNetAddConnectionA|The WNetAddConnectionA function enables the calling application to connect a local device to a network resource. A successful connection is persistent, meaning that the system automatically restores the connection during subsequent logon operations.|Mpr.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetaddconnectiona
WNetCloseEnum|The WNetCloseEnum function ends a network resource enumeration started by a call to the WNetOpenEnum function.|Mpr.dll|Enumeration|https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetcloseenum
WNetEnumResourceA|The WNetEnumResourceA function continues an enumeration of network resources that was started by a call to the WNetOpenEnum function.|Mpr.dll|Enumeration / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetenumresourcea
WNetOpenEnumA|The WNetOpenEnumA function starts an enumeration of network resources or existing connections. You can continue the enumeration by calling the WNetEnumResource function.|Mpr.dll|Internet / Helper|https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetopenenuma
WSACleanup|WSACleanup is used to terminate the use of the Winsock 2 DLL. This function is commonly used by malware upon successfully utilizing the Winsock 2 functions.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-wsacleanup
WSAIoctl|WSAIoctl Can be used to retrieve and set socket mode. E.g.: Put NIC in 'Promiscuous Mode'|ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsaioctl
WSASocketA|WSASocketA is used to create a socket that is bound to a specific transport-service provider.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketa
WSAStartup|WSAStartup is used to initiate use of the Winsock DLL by a process.|Ws2_32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsastartup
WaitForMultipleObjectsEx|WaitForMultipleObjectsEx is used to wait until one or all of the specified objects are in the signaled state or the time-out interval elapses. This function is commonly used to allow time for shellcode to execute or for time-based evasion.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitformultipleobjectsex
WaitForMultipleObjects|WaitForMultipleObjects is used to wait until one or all of the specified objects are in the signaled state or the time-out interval elapses. This function is commonly used to allow time for shellcode to execute or for time-based evasion.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitformultipleobjects
WaitForSingleObjectEx|WaitForSingleObjectEx is used to delay the execution of an object. This function is commonly used to allow time for shellcode being executed within a thread to run. It is also used for time-based evasion.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitforsingleobjectex
WaitForSingleObject|WaitForSingleObject is used to delay the execution of an object. This function is commonly used to allow time for shellcode being executed within a thread to run. It is also used for time-based evasion.|Kernel32.dll|Injection / Evasion|https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitforsingleobject
WinExec|WinExec is used to allow the execution of an application.|Kernel32.dll|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-winexec
Wow64SetThreadContext|Wow64SetThreadContext is used to set the context for the specified thread. This function can be used by malware as part of a process hollowing attack.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadcontext
Wow64SuspendThread|Suspends the specified WOW64 thread.|Kernel32.dll|Injection|https://learn.microsoft.com/en-us/windows/win32/api/wow64apiset/nf-wow64apiset-wow64suspendthread
WriteFile|WriteFile is used to write data to the specified file or input/output (I/O) device.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-writefile
WriteProcessMemory|Writing data into a specified region of memory. This function is often used by malware as part of process injection to inject malicious code into a specified process.|Kernel32.dll|Injection|https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-writeprocessmemory
ioctlsocket|ioctlsocket takes control of the I/O mode of a socket in any state|Ws2_32.lib|Internet|https://docs.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-ioctlsocket
lstrcatA|lstrcatA is used to append one string to another.|Kernel32.dll|Helper|https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lstrcata
timeSetEvent|timeSetEvent is used to start a specified timer event. This function is obselete but is still used by malware for time-based evasion.|Winmm.dll|Evasion|https://docs.microsoft.com/en-us/previous-versions/dd757634(v=vs.85)
